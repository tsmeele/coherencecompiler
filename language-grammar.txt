<Program> ::= <Protocol> | <ParallelStatement>
<Protocol> ::= TEXT_PROTOCOL <ProtocolName> <Participants> <StatementBlock>  + f:PROTOCOL()
<ProtocolName> ::= IDENTIFIER -
<Participants> ::= BRACKETOPEN <Role> [<MoreRoles>] BRACKETCLOSE  + f:PARTICIPANTS()
<Role> ::= <RoleName> [<DottedAttribute>]  + f:ROLE()
<RoleName> ::= IDENTIFIER -
<DottedAttribute> ::= DOT <Attribute>
<Attribute> ::= IDENTIFIER -
<MoreRoles> ::= COMMA <Role> [<MoreRoles>]
<StatementBlock> ::= CURLYOPEN <Statements> CURLYCLOSE  + f:STATEMENT_BLOCK()
<Statements> ::= <AtomicStatement> <Statements> | <CommunicationStatement> <Statements> | <EmptyStatement> <Statements> | <IfStatement> <Statements> | - | <CoherentStatement> <Statements>
<AtomicStatement> ::= TEXT_ATOMIC <IrodsOperation> <FromRole> <ProtectsRole> <AtomicBlock>  + f:ATOMIC()
<IrodsOperation> ::= IDENTIFIER -
<FromRole> ::= TEXT_FROM <Role>
<ProtectsRole> ::= TEXT_PROTECTS <Role>
<AtomicBlock> ::= <StatementBlock>  + f:ATOMIC_BLOCK()
<CommunicationStatement> ::= <FromRole> <ToRole> [<WithClause>] <IrodsOperation> SEMICOLON  + f:COMMUNICATION()
<ToRole> ::= TEXT_TO <Role>
<WithClause> ::= TEXT_WITH <IntegerExpression> TEXT_THREADS  + f:WITH_THREADS()
<IntegerExpression> ::= <IntegerOperand> [<IntegerOperations>]
<IntegerOperand> ::= <IntegerOperandBracketed> | <IntegerOperandMinus> | <BooleanOperandLiteral> | <IntegerOperandLiteral>
<IntegerOperandBracketed> ::= BRACKETOPEN <IntegerExpression> BRACKETCLOSE
<IntegerOperandMinus> ::= MINUS <IntegerExpression>
<BooleanOperandLiteral> ::= BOOLEANLITERAL -
<IntegerOperandLiteral> ::= INTEGERLITERAL -
<IntegerOperations> ::= <IntegerAddition> [<IntegerOperations>] | <IntegerSubtraction> [<IntegerOperations>]
<IntegerAddition> ::= PLUS <IntegerOperand>  + f:INTEGER_ADDITION()
<IntegerSubtraction> ::= MINUS <IntegerOperand>  + f:INTEGER_SUBTRACTION()
<EmptyStatement> ::= SEMICOLON -
<IfStatement> ::= TEXT_IF <IfClause> <ThenClause> [<ElseClause>]  + f:IFTHENELSE()
<IfClause> ::= <RoleCondition> | <StringOperandLiteral>
<RoleCondition> ::= <Role> <AttributeConditionBracketed>  + f:ROLE_CONDITION()
<AttributeConditionBracketed> ::= BRACKETOPEN <Attribute> <AttributeOperandIsEqual> BRACKETCLOSE
<AttributeOperandIsEqual> ::= ISEQUAL <Attribute>  + f:ATTRIBUTES_IS_EQUAL()
<StringOperandLiteral> ::= DQSTRINGLITERAL -
<ThenClause> ::= TEXT_THEN <StatementBlock>
<ElseClause> ::= TEXT_ELSE <StatementBlock>
<CoherentStatement> ::= TEXT_COHERENT <Role> [<MoreRoles>] SEMICOLON  + f:COHERENT()
<ParallelStatement> ::= TEXT_PARALLEL <Protocol> <ParallelAndClause>
<ParallelAndClause> ::= TEXT_AND <Protocol> SEMICOLON

